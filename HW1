-- Exercise 1.1
SELECT reaction_type, COUNT(1) AS count
FROM reactions
GROUP BY reaction_type
ORDER BY 2 DESC;


-- Exercise 1.2
SELECT COUNT(1) AS count
FROM users
WHERE id NOT IN (SELECT DISTINCT user_id FROM posts)
  AND id NOT IN (SELECT DISTINCT user_id FROM reactions)
  AND id NOT IN (SELECT DISTINCT user_id FROM comments);


-- Exercise 1.3
WITH reacts AS (
        SELECT posts.user_id, post_id, COUNT(1) AS count
        FROM reactions JOIN posts ON reactions.post_id = posts.id
        GROUP BY posts.user_id, post_id
    )
SELECT user_id, SUM(count) AS total_reactions,
       COUNT(1) AS total_posts, AVG(count) AS avg_reactions_per_post
FROM reacts
GROUP BY user_id
-- ORDER BY 2 DESC -- Using total_reactions(approach 1) 
ORDER BY 4 DESC -- Using avg_reactions_per_post (approach 2)
LIMIT 5;


-- Exercise 1.4
WITH all_data AS (
        SELECT user_id, content FROM posts
        UNION ALL
        SELECT user_id, content FROM comments
    ), spams AS (
        SELECT user_id, content, COUNT(1) AS count
        FROM all_data
        GROUP BY user_id, content
        HAVING COUNT(1) >= 3
    )
SELECT DISTINCT user_id
FROM spams;